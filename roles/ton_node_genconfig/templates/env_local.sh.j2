#!/usr/bin/env bash

# (C) Sergey Tyurin  2021-10-19 10:00:00

# Disclaimer
##################################################################################################################
# You running this script/function means you will not blame the author(s)
# if this breaks your stuff. This script/function is provided AS IS without warranty of any kind. 
# Author(s) disclaim all implied warranties including, without limitation, 
# any implied warranties of merchantability or of fitness for a particular purpose. 
# The entire risk arising out of the use or performance of the sample scripts and documentation remains with you.
# In no event shall author(s) be held liable for any damages whatsoever 
# (including, without limitation, damages for loss of business profits, business interruption, 
# loss of business information, or other pecuniary loss) arising out of the use of or inability 
# to use the script or documentation. Neither this script/function, 
# nor any part of it other than those parts that are explicitly copied from others, 
# may be republished without author(s) express written permission. 
# Author(s) retain the right to alter this disclaimer at any time.
##################################################################################################################

SCRIPT_DIR={{ ton_node_scripts }}
export NODE_TOP_DIR={{ ton_node_user_home }}

#=====================================================
# Network related variables

export NETWORK_TYPE="{{ ton_node_config }}.ton.dev"      # can be main.* / net.* / fld.* / rustnet.* / rfld.*
export NODE_TYPE="RUST"                 # Can be CPP / RUST. Also defines network to build DApp fullnode with or w/o compression
export NODE_WC="{{ escale_workchain }}"                        # Node WorkChain (for rust network)
export ELECTOR_TYPE="{{ elector_type }}"

#=====================================================
# Msig validation defaults

export DELAY_TIME="{{ delay_time }}"                     # Delay time from the start of elections
export TIME_SHIFT="{{ time_shift }}"                   # Time between sequential scripts

#=====================================================
# Node addresses & ports
export HOSTNAME={{ ansible_hostname }}
export ADNL_PORT="{{ ton_node_adnl_port }}"
export NODE_ADDRESS="${NODE_IP_ADDR}:${ADNL_PORT}"
export LITESERVER_IP="{{ liteserver_ip }}"
export LITESERVER_PORT="{{ liteserver_port }}"
export RCONSOLE_PORT="{{ ton_node_console_port }}"
export VAL_ENGINE_CONSOLE_IP="{{ val_engine_console_ip }}"
export VAL_ENGINE_CONSOLE_PORT="{{ val_engine_console_port }}"
export ServiceName="{{ ton_node_service_name }}"

#=====================================================
# Work folders for db, keys and conf
export NODE_BIN_DIR="{{ ton_node_bin_dir }}"

# Keep node log files after logrotate in separate folder for X days
export NODE_LOGS_ARCH="{{ ton_rnode_log_dir }}"
export NODE_LOGs_ARCH_KEEP_DAYS=5

# R-NODE database, configs and logs folders
export RNODE_WORK_DIR="{{ ton_rnode_work_dir }}"
export R_DB_DIR="{{ ton_rnode_db_dir }}"
export R_LOG_DIR="{{ ton_rnode_log_dir }}"
export R_CFG_DIR="{{ ton_rnode_config_dir }}"

export RNODE_LOG_FILE="node.log"

# addresses, keys and elections folders
export KEYS_DIR="{{ ton_node_keys }}"
export ELECTIONS_WORK_DIR="{{ ton_node_election }}"
export ELECTIONS_HISTORY_DIR="{{ ton_node_election_history }}"

#=====================================================
# Smart contracts paths
export ContractsDIR="{{ ton_node_contracts_dir }}"
