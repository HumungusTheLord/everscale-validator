---

- name: Include os specific tasks
  include_tasks: "{{ ansible_pkg_mgr }}.yml"



- name: Add telegraf user to everscale group
  user:
    name: telegraf
    groups: "{{ ever_node_group }}"
    append: yes
  ignore_errors: yes

- name: Copy default telegraf config
  copy:
    src: "telegraf.conf"
    dest: "/etc/telegraf/telegraf.conf"
    owner: telegraf
    group: telegraf
  notify: restart_telegraf

- name: Copy telegraf env config
  template:
    src: "telegraf.j2"
    dest: "/etc/default/telegraf"
    owner: telegraf
    group: telegraf
  notify: restart_telegraf

- name: Copy telegraf everscale config
  template:
    src: "telegraf_everscale.conf.j2"
    dest: "/etc/telegraf/telegraf.d/telegraf_everscale.conf"
  notify: restart_telegraf

- name: Fix telegraf dirs own
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: telegraf
    group: telegraf
  loop:
    - "/etc/telegraf"

- name: Copy ever-env file
  template:
    src: "ever-env.j2"
    dest: "{{ ton_node_scripts }}/ever-env.sh"
    owner: "{{ ever_node_user }}"
    group: "{{ ever_node_group }}"
    mode: u=rwx,g=rx,o=

- name: Copy monitoring scripts
  copy:
    src: "scripts/"
    dest: "{{ ton_node_scripts }}/"
    mode: u=rwx,g=rx,o=
    owner: "{{ ever_node_user }}"
    group: "{{ ever_node_group }}"

- name: icinga to sudoers
  block:
    - name: Set SELinux in permissive mode until the machine is rebooted
      command: setenforce 0
      ignore_errors: true
      changed_when: false

    - name: check sudoers file for icinga user
      stat:
        path: /etc/sudoers.d/icinga
      register: stat_result

    - name: create sudoers file for icinga if file not exist
      file:
        path: /etc/sudoers.d/icinga
        state: touch
      when: not stat_result.stat.exists

    - name: add icinga to sudoers
      lineinfile:
        path: /etc/sudoers.d/icinga
        state: present
        line: 'icinga ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
  when: add_icinga_to_sudoers and use_icinga

- name: when icinga not in sudoers
  block:
    - name: add icinga to {{ ever_node_group  }}
      user:
        name: "icinga"
        group: "{{ ever_node_group }}"
        append: yes

    - name: execute bit for group to validator directory
      ansible.builtin.file:
        path: "{{ ever_node_user_home }}"
        owner: "{{ ever_node_user }}"
        group: "{{ ever_node_group }}"
        mode: '0750'

    - name: execute bit for group to keys directory
      ansible.builtin.file:
        path: "{{ ever_node_keys }}"
        owner: "{{ ever_node_user }}"
        group: "{{ ever_node_group }}"
        mode: g+r
  when: not add_icinga_to_sudoers and use_icinga

- name: back compat
  ansible.builtin.file:
    src: "{{ ever_node_user_home }}/ton-env.sh"
    dest: "{{ ever_node_user_home }}/ever-env.sh"
    owner: "{{ ever_node_user }}"
    group: "{{ ever_node_group }}"
    state: link
  ignore_errors: true
  when: use_icinga
