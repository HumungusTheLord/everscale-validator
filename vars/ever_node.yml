# Set everscale work network
# Possible values are: main, net, fld, rfld. Also you must change ever_node_compression_enabled value.
ever_node_config: "main"

# Possible values are: -1, 0 and 1. For rust node use 0.
escale_workchain: "0"

# everscale node service name
ever_node_service_name: "ever-node"

# use telegraf or not
use_telegraf: false

# Everscale network configs
ever_node_global_config_URL_list:
  main:
    config_URL: "https://raw.githubusercontent.com/tonlabs/main.ton.dev/master/configs/ton-global.config.json"
    DAPP_address: "https://main.ton.dev"
    DAPP_endpoints: "https://eri01.main.everos.dev/,https://gra01.main.everos.dev/,https://gra02.main.everos.dev/,https://lim01.main.everos.dev/,https://rbx01.main.everos.dev/"

  net:
    config_URL: "https://raw.githubusercontent.com/tonlabs/net.ton.dev/master/configs/ton-global.config.json"
    DAPP_address: "https://net.ton.dev"
    DAPP_endpoints: "https://eri01.net.everos.dev/,https://rbx01.net.everos.dev/,https://gra01.net.everos.dev/"

  fld:
    config_URL: "https://raw.githubusercontent.com/FreeTON-Network/fld.ton.dev/main/configs/fld.ton.dev/ton-global.config.json"
    DAPP_address: "https://gql.custler.net"
    DAPP_endpoints: "https://gql.custler.net"

rfld:
    config_URL: "https://raw.githubusercontent.com/FreeTON-Network/custler.uninode/main/configs/rfld.ton.dev/ton-global.config.json"
    DAPP_address: "https://rfld.ton.dev"
    DAPP_endpoints: "https://rfld-dapp.itgold.io"

# Get everscale node commit id: https://github.com/tonlabs/ever-node/commits
ever_node_github_repo: "https://github.com/tonlabs/ever-node.git"
ever_node_github_commit_id: "master"

# Recompile binary without sources changes: false|true
ever_node_force_recompile: false

# Get everscale node tools commit id: https://github.com/tonlabs/ever-node-tools/commits"
ever_node_tools_github_repo: "https://github.com/tonlabs/ever-node-tools.git"
ever_node_tools_github_commit_id: "master"

# Recompile binary without sources changes: false|true
ever_node_tools_force_recompile: false

# Get tonos cli commit id: https://github.com/tonlabs/tonos-cli/commits"
tonos_cli_github_repo: "https://github.com/tonlabs/tonos-cli.git"
tonos_cli_github_commit_id: "master"

# Recompile binary without sources changes: false|true
tonos_cli_force_recompile: false

# Get TVM linker commit id: https://github.com/tonlabs/TVM-linker/commits"
tvm_linker_github_repo: "https://github.com/tonlabs/TVM-linker.git"
tvm_linker_github_commit_id: "master"

# Recompile binary without sources changes: false|true
tvm_linker_force_recompile: false

# Compile ever_node with metrics enabled - powered by statsd service it will send stats to influxdb (grafana): false|true
ever_node_metrics_enabled: false

# Compile ever_node with compression enabled: false|true. Do not use compression at any network except 'rfld'.
ever_node_compression_enabled: false

# Compile ever_node with external_db enabled: false|true. Only for DAPP usage with Apache Kafka back-end.
ever_node_external_db_enabled: false

# Compile with sha20native feature
ever_node_sha2_native_enabled: true

ever_node_solc_github_repo: "https://github.com/tonlabs/TON-Solidity-Compiler.git"
ever_node_solc_github_commit_id: "master"

ever_node_contracts_github_repo: "https://github.com/tonlabs/ton-labs-contracts.git"
ever_node_contracts_github_commit_id: "master"

# Default user and group names
ever_node_user: "xnode"
ever_node_group: "xnode"

# Set everscale node service enabled for autostart after system restart: yes|no
ever_node_service_autostart: "yes"
# Everscale node service state after ansible script deploying: restarted|started|stopped
ever_node_service_state: "restarted"

# Specify everscale dirs
# Variable ever_node_user_home depends on username and it's home dir (ever_node_user).
ever_node_src_dir: "/usr/local/src/everscale"
ever_node_bin_dir: "/usr/local/bin"
ever_node_tools_dir: "/usr/local/bin"
ever_node_contracts_dir: "{{ ever_node_user_home }}/contracts"
ton_node_scripts: "{{ ever_node_user_home }}/scripts"
ever_node_keys: "{{ ever_node_user_home }}/ton-keys"
ever_node_election: "{{ ever_node_keys }}/election"
ever_node_election_history: "{{ ever_node_keys }}/elections_hist"

# `ln -s additional_mount ever_node_work_dir` if additional_disk_mounted == true (mounted to additional_mount). For testing.
additional_mount: "/opt/ton-work"
additional_disk_mounted: false

ever_node_work_dir: "/var/ton-work"
ever_rnode_work_dir: "/var/ton-work/rnode"
ever_node_db_dir: "{{ ever_rnode_work_dir }}/rnode_db"
ever_node_config_dir: "{{ ever_rnode_work_dir }}/configs"
ever_node_log_dir: "{{ ever_rnode_work_dir }}/logs"

# TON node ports 
ever_node_adnl_port: "30303"
ever_node_console_port: "4925"


# Get Custler repo
# ever_custler_github_repo: "https://github.com/Everscale-Network/custler.uninode.git"
ever_custler_github_repo: "https://github.com/Custler/main.evs.dev.git"
ton_custler_github_commit_id: "main"
ton_custler_scripts_enabled: true

# Freeton smart contracts
ever_smartcontracts_github_repo: "https://github.com/tonlabs/ton-labs-contracts.git"
ever_smartcontracts_github_commit_id: "master"

ever_node_additional_contracts:
  - https://github.com/FreeTON-Network/fld.ton.dev/raw/main/scripts/Marvin.abi.json
  # - https://raw.githubusercontent.com/tonlabs/rustnet.ton.dev/mainnet/docker-compose/ton-node/configs/Elector.abi.json
  - https://raw.githubusercontent.com/tonlabs/rustnet.ton.dev/main/docker-compose/ton-node/configs/Elector.abi.json

###
# Custler's env
###

wrk_dir: "/var"
node_log_filename: "node.log"

# can be msig or depool
stake_mode: depool
elector_type: fift
delay_time: 0
time_shift: 450
lc_send_msg_timeout: 10

# depool vars
validator_assurance_in_tokens: 100000
min_stake_in_tokens: 10

participant_reward_fraction: 95
balance_threshold_in_tokens: 20
tik_replanish_amount: 10

# msig vars
msig_fix_stake: 45000
val_acc_init_bal: 99000
val_acc_reserved: 50

liteserver_ip: "127.0.0.1"
liteserver_port: "3031"
val_engine_console_ip: "127.0.0.1"
val_engine_console_port: "{{ ever_node_console_port }}"

# Custler's telegabot
"telegram_bot_token": ""
"telegram_chat_id": ""

# rustup_default_toolchain defined on system.yml
rust_version: "{{ rustup_default_toolchain }}"
boost_version: "1.76.0"
min_tc_version: "0.24.60"
min_rc_version: "0.1.261"

# if you suggest auto-update via Custler's scripts, then set true
ton_node_binaries_autoupdate: "false"
ton_node_scripts_autoupdate: "false"
newReleaseSndMsg: "false"

# restoreDB: true
